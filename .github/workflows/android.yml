name: Android CI

on:
  push:
    branches: [ main ]
    tags:
      - v*
      - ci*
    paths-ignore:
      - '.idea/**'
      - '**/README.md'
      - 'CHANGES.md'
  pull_request:
    branches: [ main, dev ]
    paths-ignore:
      - '.idea/**'
      - '**/README.md'
      - 'CHANGES.md'

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: act10ns/slack@v2
        with:
          status: starting
          channel: '#watchdone'
        if: always()

      - name: Check Out
        id: check-out
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PRIV_REPO_PAT }}
          submodules: 'recursive'

      - name: Get commit hash
        id: commithash
        shell: bash
        run: |
          sha=$( curl -u "u:${{github.token}}" https://api.github.com/repos/thesandipv/watchdone/git/ref/heads/${{ github.head_ref }} | jq .object.sha | tr -d '"' )
          if [ $sha == "null" ] || [ $sha == "" ]; then
            if [ ${{ github.ref_type }} == "branch" ]; then
              sha=$( curl -u "u:${{github.token}}" https://api.github.com/repos/thesandipv/watchdone/git/ref/heads/${{ github.ref_name }} | jq .object.sha | tr -d '"' )
            else
              sha=$( curl -u "u:${{github.token}}" https://api.github.com/repos/thesandipv/watchdone/git/ref/tags/${{ github.ref_name }} | jq .object.sha | tr -d '"' )
            fi
          fi
          echo $sha
          short_sha=${sha:0:7}
          echo $short_sha
          echo ::set-output name=sha::$sha
          echo ::set-output name=sha_short::$short_sha

      - name: set up JDK
        id: setup-jdk
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Grant execute permissions
        id: grant-execute-permissions-for-scripts
        run: chmod +x release/decrypt.sh release/clean.sh

      - name: Decrypt Task
        id: decrypt
        run: ./release/decrypt.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Grant execute permission for gradlew
        id: grant-execute-permissions-for-gradle
        run: chmod +x gradlew

      - name: Setup Gradle
        id: setup-gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: false

      - name: Assemble Release Build
        id: assemble-release-build
        run: ./gradlew :app:assembleRelease :app:bundleRelease --stacktrace
        env:
          CI: true
          GHTOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHUSERNAME: ${{ secrets.GHUSERNAME }}
          SIGN_KEY_PW: ${{ secrets.SIGN_KEY_PW }}
          SIGN_STORE_PW: ${{ secrets.SIGN_STORE_PW }}
          TMDB_API: ${{ secrets.TMDB_API }}
          TMDB_BEARER_TOKEN: ${{ secrets.TMDB_BEARER_TOKEN }}
          COMMIT_ID: ${{ steps.commithash.outputs.sha_short }}
          FB_APP_ID: ${{ secrets.FB_APP_ID }}

      - name: Run Tests in app module
        id: run-tests
        continue-on-error: true #TODO Remove
        run: ./gradlew testReleaseUnitTest
        env:
          TMDB_API: ${{ secrets.TMDB_API }}
          TMDB_BEARER_TOKEN: ${{ secrets.TMDB_BEARER_TOKEN }}
          COMMIT_ID: ${{ steps.commithash.outputs.sha_short }}
          FB_APP_ID: ${{ secrets.FB_APP_ID }}

      - name: Publish to Play Store
        id: publish-to-play-store
        if: startsWith(github.ref, 'refs/tags/v')
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: release/serviceAccount.json
          packageName: com.afterroot.watchdone
          track: production
          status: inProgress
          userFraction: 0.80
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          mappingFile: app/build/outputs/mapping/release/mapping.txt

      - name: Publish to Internal Track Play Store
        id: publish-to-play-store-internal
        if: github.ref == 'refs/heads/main'
        continue-on-error: true
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: release/serviceAccount.json
          packageName: com.afterroot.watchdone
          track: internal
          status: completed
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          mappingFile: app/build/outputs/mapping/release/mapping.txt

      - name: Create release for tags
        id: create-release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: |
            app/build/outputs/apk/release/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Task
        if: always()
        run: ./release/clean.sh

      - name: Android App size difference
        continue-on-error: true
        uses: microsoft/android-app-size-diff@v1.0.5
        with:
          baseAppPath: app/build/outputs/apk/release/app-release.apk
          targetAppPath: app/build/outputs/apk/release/app-release.apk
          summaryOutputPath: app/build/reports/apkSizeComparison.md
          telemetryEnabled: false

      - name: Upload build outputs
        id: upload-outputs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload build reports
        id: upload-reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: app-build-reports
          path: app/build/reports

      - name: Upload to Slack
        id: upload-to-slack
        uses: adrey/slack-file-upload-action@1.0.5
        continue-on-error: true
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          path: app/build/outputs/apk/release/app-release.apk
          channel: watchdone
          filename: Watchdone-${{ steps.commithash.outputs.sha_short }}.apk

      - uses: act10ns/slack@v2
        if: always()
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#watchdone'
