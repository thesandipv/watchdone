/*
 * Copyright (C) 2020 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//apply plugin: 'com.google.android.gms.oss-licenses-plugin'
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

ext {
    major = 0
    minor = 0
    patch = 1
    minimumSdkVersion = 16
}

android {
    if (!System.getenv("CI")) {
        def keystorePropertiesFile = rootProject.file("keystore.properties")
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        signingConfigs {
            signing {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.afterroot.watchdone"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 29
        versionCode project.ext.minimumSdkVersion * 10000000 + project.ext.major * 10000 + project.ext.minor * 100 + project.ext.patch
        versionName "${project.ext.major}.${project.ext.minor}.${project.ext.patch}"
        vectorDrawables {
            useSupportLibrary = true
        }
        multiDexEnabled true
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", true)
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                hostName  : "afterroot.web.app",
                pathPrefix: "/apps/watchdone"
        ]
        if (!System.getenv("CI")) {
            def tmdbProperties = new Properties()
            tmdbProperties.load(new FileInputStream(rootProject.file("tmdb.properties")))
            buildConfigField "String", "TMDB_BEARER_TOKEN", tmdbProperties["tmdbBearerToken"]
            buildConfigField "String", "TMDB_API", tmdbProperties["tmdbApi"]
            signingConfig signingConfigs.signing
        } else {
            buildConfigField "String", "TMDB_API", System.getenv("TMDB_API")
            buildConfigField "String", "TMDB_BEARER_TOKEN", System.getenv("TMDB_BEARER_TOKEN")
        }
        android.buildFeatures.dataBinding = true
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('proguard-rules.pro')
        }
        debug {
            ext.alwaysUpdateBuildId = false
            splits.abi.enable = false
            splits.density.enable = false
            crunchPngs false
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
    flavorDimensions 'ar'
    productFlavors {
        dev {
            dimension = 'ar'
            resConfigs('en', 'xhdpi')
            versionNameSuffix = '-beta'
        }

        prod {
            dimension = 'ar'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }

}

configurations.all {
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
}

dependencies {
    implementation "com.afterroot.core:core:$coreVersion"
    implementation project(path: ':tmdbapi')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$ankoCommonsVersion"

    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.legacy:legacy-support-v13:$legacySupportV13Version"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportV4Version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    implementation "androidx.multidex:multidex:$multidexVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.room:room-ktx:$roomKtxVersion"
    implementation "androidx.room:room-runtime:$roomKtxVersion"
    implementation "androidx.startup:startup-runtime:1.0.0-alpha01"
    implementation "androidx.vectordrawable:vectordrawable:$vectordrawableVersion"
    implementation "com.android.billingclient:billing:$billingVersion"
    kapt "androidx.room:room-compiler:$roomKtxVersion"

    implementation "com.afollestad.material-dialogs:input:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:core:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:bottomsheets:$materialDialogsVersion"
    implementation "com.afollestad.material-dialogs:color:$materialDialogsVersion"

    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiAuthVersion"
    implementation "com.firebaseui:firebase-ui-firestore:$firebaseUiFirestoreVersion"
    implementation "com.firebaseui:firebase-ui-storage:$firebaseUiStorageVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    implementation "com.google.android.material:material:$googleMaterialVersion"
    implementation "com.google.firebase:firebase-analytics:17.4.3"
    implementation "com.google.firebase:firebase-ads:$firebaseAdsVersion"
    implementation "com.google.firebase:firebase-auth:$firebaseAuthVersion"
    implementation "com.google.firebase:firebase-config:$firebaseConfigVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-crashlytics:$firebaseCrashlyticsVersion"
    implementation "com.google.firebase:firebase-firestore-ktx:$firebaseFirestoreVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"
    implementation "com.google.firebase:firebase-storage:$firebaseStorageVersion"

    implementation "org.apache.commons:commons-io:$commonsIoVersion"

    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"
    implementation "org.koin:koin-androidx-viewmodel:$koinVersion"
    testImplementation "org.koin:koin-test:$koinVersion"
    androidTestImplementation "org.koin:koin-test:$koinVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.7'

    implementation 'me.zhanghai.android.materialprogressbar:library:1.6.1'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    testImplementation 'org.mockito:mockito-android:3.3.3'
}
