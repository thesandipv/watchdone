/*
 * Copyright (C) 2020-2021 Sandip Vaghela
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    //id 'com.google.android.gms.oss-licenses-plugin'
    id 'androidx.navigation.safeargs.kotlin'

}

kapt {
    correctErrorTypes = true
    useBuildCache = true
}

ext {
    ci = System.getenv("CI") == "true"
}

android {
    compileSdkVersion SDK.COMPILE

    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }

    defaultConfig {
        applicationId "com.afterroot.watchdone"
        minSdkVersion SDK.MIN
        targetSdkVersion SDK.TARGET
        versionCode VERSION_CODE
        versionName VERSION_NAME
        vectorDrawables {
            useSupportLibrary = true
        }
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                hostName  : "afterroot.web.app",
                pathPrefix: "/apps/watchdone/launch"
        ]

        resConfigs "en"

        def tmdbPropertiesFile = rootProject.file("tmdb.properties")
        def tmdbProperties = new Properties()
        if (tmdbPropertiesFile.exists()) {
            tmdbProperties.load(new FileInputStream(tmdbPropertiesFile))
        }
        buildConfigField "String", "TMDB_BEARER_TOKEN", tmdbProperties["tmdbBearerToken"] ?: System.getenv("TMDB_BEARER_TOKEN")
        buildConfigField "String", "TMDB_API", tmdbProperties["tmdbApi"] ?: System.getenv("TMDB_API")

        def commit = "git rev-list --max-count=1 HEAD".execute([], project.rootDir).text.substring(0, 7)
        buildConfigField "String", "COMMIT_ID", "\"$commit\""
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    signingConfigs {
        release {
            storeFile rootProject.file("release/keystore.jks")
            storePassword keystoreProperties['storePassword'] ?: System.getenv("SIGN_STORE_PW")
            keyAlias "watchdone"
            keyPassword keystoreProperties['keyPassword'] ?: System.getenv("SIGN_KEY_PW")
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('proguard-rules.pro')

            signingConfig signingConfigs.release
        }
        debug {
            ext.alwaysUpdateBuildId = false
            splits.abi.enable = false
            splits.density.enable = false
            crunchPngs false

            applicationIdSuffix '.debug'
            versionNameSuffix = '-beta'

            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }


    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    lintOptions {
        abortOnError false
    }

    composeOptions {
        kotlinCompilerExtensionVersion = Versions.compose
    }
}

/*configurations.all {
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
}*/

dependencies {
    implementation Libs.AfterROOT.Core.core

    implementation project(':base')
    implementation project(':data')
    implementation project(':ui:common')
    implementation project(':ui:common-compose')
    implementation project(':ui:media')
    implementation project(':ui:resources')

    implementation Libs.Kotlin.stdLib
    implementation Libs.Kotlin.anko

    implementation Libs.AndroidX.appCompat
    implementation Libs.AndroidX.billing
    implementation Libs.AndroidX.cardView
    implementation Libs.AndroidX.constraintLayout
    implementation Libs.AndroidX.core
    implementation Libs.AndroidX.fragment
    implementation Libs.AndroidX.Lifecycle.common
    implementation Libs.AndroidX.Lifecycle.extensions
    implementation Libs.AndroidX.Lifecycle.livedata
    implementation Libs.AndroidX.Lifecycle.viewmodel
    implementation Libs.AndroidX.multiDex
    implementation Libs.AndroidX.Navigation.fragment
    implementation Libs.AndroidX.Navigation.ui
    implementation Libs.AndroidX.paging
    implementation Libs.AndroidX.palette
    implementation Libs.AndroidX.preference
    implementation Libs.AndroidX.recyclerView
    implementation Libs.AndroidX.startUp
    implementation Libs.AndroidX.supportV13
    implementation Libs.AndroidX.supportV4
    implementation Libs.AndroidX.vectorDrawable

    implementation Libs.AndroidX.Activity.compose
    implementation Libs.AndroidX.Navigation.compose

    implementation Libs.AndroidX.Compose.ui
    implementation Libs.AndroidX.Compose.tooling
    implementation Libs.AndroidX.Compose.foundation
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.iconsCore
    implementation Libs.AndroidX.Compose.iconsExt
    implementation Libs.AndroidX.Compose.livedata

    implementation Libs.Accompanist.insets

    implementation Libs.MaterialDialogs.input
    implementation Libs.MaterialDialogs.core
    implementation Libs.MaterialDialogs.bottomSheets
    implementation Libs.MaterialDialogs.color

    implementation Libs.FirebaseUI.auth
    implementation Libs.FirebaseUI.firestore
    implementation Libs.FirebaseUI.storage

    implementation Libs.Glide.glide
    kapt Libs.Glide.compiler

    implementation platform(Libs.Firebase.bom)

    implementation Libs.Google.ossLic
    implementation Libs.Google.material
    implementation Libs.Firebase.ads
    implementation Libs.Firebase.analytics
    implementation Libs.Firebase.auth
    implementation Libs.Firebase.core
    implementation Libs.Firebase.crashlytics
    implementation Libs.Firebase.database
    implementation Libs.Firebase.firestore
    implementation Libs.Firebase.messaging
    implementation Libs.Firebase.storage
    implementation "com.google.firebase:firebase-config-ktx"

    implementation Libs.commonsIo

    implementation Libs.Koin3.android
    implementation Libs.Koin3.ext
    testImplementation Libs.Koin3.test

    implementation Libs.Kotlin.Coroutines.core
    implementation Libs.Kotlin.Coroutines.android
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'

    implementation Libs.materialProgress

    testImplementation Libs.Test.junit
    androidTestImplementation Libs.Test.junitExt
    androidTestImplementation Libs.Test.espresso

    testImplementation 'androidx.test:core:1.3.0'

    testImplementation 'org.mockito:mockito-core:3.9.0'
    androidTestImplementation 'org.mockito:mockito-android:3.9.0'
}
